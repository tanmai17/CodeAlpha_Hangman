# -*- coding: utf-8 -*-
"""Task1_Hangman.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12GmDJt-Uaab96wWGzoWEs01vyHElbglb
"""

import random
# Step 1: Setup
WORDS = ["python", "hangman", "codealpha", "internship", "programming"]
MAX_ATTEMPTS = 6

# Step 2: Initialize game
word = random.choice(WORDS)
guessed = ["_"] * len(word)   # progress shown to user
used_letters = []             # track letters already guessed
attempts = MAX_ATTEMPTS

print("🎮 Welcome to Hangman (Internship Edition)!")
print("Word:", " ".join(guessed))
print(f"You have {attempts} attempts.\n")

import random

def hangman():
    # --- Setup ---
    WORDS = ["python", "hangman", "codealpha", "internship", "programming"]
    MAX_ATTEMPTS = 6

    word = random.choice(WORDS)
    guessed = ["_"] * len(word)
    used_letters = []
    attempts = MAX_ATTEMPTS

    print("🎮 Welcome to Hangman (Internship Edition)!")
    print("Guess the word before attempts run out.\n")
    print("Word:", " ".join(guessed))
    print(f"You have {attempts} attempts.\n")

    # --- Main Loop ---
    while attempts > 0 and "_" in guessed:
        guess = input("Enter a letter (or type 'hint'): ").lower()

        # --- Hint option ---
        if guess == "hint":
            if attempts > 1:  # don’t allow hint when only 1 attempt left
                hidden = [c for c in word if c not in guessed]
                if hidden:
                    revealed = random.choice(hidden)
                    for i, letter in enumerate(word):
                        if letter == revealed:
                            guessed[i] = revealed
                    attempts -= 1
                    print(f"💡 Hint used! Revealed letter: {revealed}")
                    print("Word:", " ".join(guessed))
                    print(f"Attempts left: {attempts}\n")
                    continue
            print("⚠️ Hint not available right now.\n")
            continue

        # --- Normal guess validation ---
        if len(guess) != 1 or not guess.isalpha():
            print("⚠️ Please enter a single alphabetic letter.")
            continue

        if guess in used_letters:
            print("⚠️ You already tried that letter.")
            continue

        used_letters.append(guess)

        # --- Correct guess ---
        if guess in word:
            for i, letter in enumerate(word):
                if letter == guess:
                    guessed[i] = guess
            print("✅ Correct! Word:", " ".join(guessed))
        else:
            attempts -= 1
            print(f"❌ Wrong guess! Attempts left: {attempts}")

        print("Used letters:", " ".join(used_letters))
        print()

    # --- Final Result ---
    if "_" not in guessed:
        print("🎉 You WON! The word was:", word)
    else:
        print("😢 You LOST! The word was:", word)

# Run the game
hangman()